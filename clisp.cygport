NAME="clisp"
VERSION=2.49
RELEASE=6.20150312hg15611
HOMEPAGE="http://clisp.cons.org/"
ORIG_PV=2.49+

# SRC_URI="ftp://ftp.gnu.org/pub/gnu/${PN}/release/${PV}/${PN}-${PV}.tar.gz"
# SRC_URI="ftp://sunsite.unc.edu/pub/Linux/devel/lang/lisp/${PN}-${PV}.tar.bz2"
# SRC_URI="http://puzzle.dl.sourceforge.net/sourceforge/${PN}/${PN}-${PV}.tar.bz2"
# SRC_URI="http://prdownloads.sourceforge.net/${PN}/${PN}-${PV}.tar.bz2?download"

HG_URI="http://hg.code.sf.net/p/clisp/clisp"
HG_REV=15611 # as of 2015-03-12
inherit hg

# The following have been sent upstream but not applied yet.
PATCH_URI+=" http://sourceforge.net/p/clisp/patches/36/attachment/01-Handle.patch"
PATCH_URI+=" http://sourceforge.net/p/clisp/patches/37/attachment/02-declare_ioctl.patch"
PATCH_URI+=" http://sourceforge.net/p/clisp/patches/38/attachment/03-LINUX_NOEXEC_HEAPCODES.patch"
PATCH_URI+=" http://sourceforge.net/p/clisp/patches/39/attachment/04-uuid.patch"
PATCH_URI+=" http://sourceforge.net/p/clisp/patches/_discuss/thread/3427bc0d/b018/attachment/clisp-libsvm.patch"
PATCH_URI+=" http://sourceforge.net/p/clisp/patches/40/attachment/06-gtk_server_cfg.patch"
PATCH_URI+=" http://sourceforge.net/p/clisp/patches/41/attachment/07-signal_m4.patch"
PATCH_URI+=" http://sourceforge.net/p/clisp/patches/42/attachment/08-no___CYGWIN32__.patch"
PATCH_URI+=" http://sourceforge.net/p/clisp/patches/43/attachment/09-x86_x4_ULONGLONG.patch"
PATCH_URI+=" http://sourceforge.net/p/clisp/patches/44/attachment/fix_dynamic_loading_cygwin.patch"

# The following aren't ready for upstream.
PATCH_URI+=" 10-update_src_configure.patch"
PATCH_URI+=" 11-update_modules_syscalls_configure.patch"
# PATCH_URI+=" 12-no_regexp_x86_64_cygwin.patch"
PATCH_URI+=" 2.49+-gtk2_lib_name.patch"
PATCH_URI+=" 2.49-no_cygwin_README.patch"
PATCH_URI+=" 20150312-berkeley_db_test.patch"
PATCH_URI+=" 20150312-clx_test.patch"
PATCH_URI+=" 20150312-excepsit_test.patch"
PATCH_URI+=" 20150312-gdbm_test.patch"
PATCH_URI+=" 20150312-libsvm_test.patch"
PATCH_URI+=" 20150312-path_test.patch"
PATCH_URI+=" 20150312-rawsock_test.patch"
PATCH_URI+=" 20150312-postgresql_test.patch"
PATCH_URI+=" 20150312-socket_test.patch"
PATCH_URI+=" 20150312-syscalls_test.patch"
PATCH_URI+=" unix_line_endings_cygwin.patch"
PATCH_URI+=" cygwin-no-save-executable.patch"
PATCH_URI+=" sys_select.patch"

clisp_CATEGORY="Devel Interpreters Math Shells"
clisp_SUMMARY="An ANSI Common Lisp implementation"
clisp_DESCRIPTION="ANSI Common Lisp is a high-level, general-purpose programming
language.  GNU CLISP is a Common Lisp implementation by Bruno Haible
of Karlsruhe University and Michael Stoll of Munich University, both
in Germany.  It mostly supports the Lisp described in the ANSI Common
Lisp standard.  GNU CLISP includes an interpreter, a compiler, a
debugger, CLOS, MOP, a foreign language interface, sockets, i18n, fast
bignums, and more.  An X11 interface is available through CLX, Garnet,
CLUE/CLIO.  GNU CLISP runs Maxima, ACL2, and many other Common Lisp
packages."

if [ "${ARCH}" = i686 ]
then
    
    # Between releases 2.49-4.20150312hg15611 and
    # 2.49-5.20150312hg15611 I uploaded a new setup.hint for clisp-gdi
    # putting it in the _obsolete category.  I should have done this
    # when it was first made empty.
    # PKG_NAMES="${PN} ${PN}-clx ${PN}-gdi ${PN}-gtk2"
    PKG_NAMES="${PN} ${PN}-clx ${PN}-gtk2"
    clisp_clx_CATEGORY="Interpreters"
    clisp_gtk2_CATEGORY="Interpreters"

    clisp_clx_SUMMARY="The new-clx module for clisp"
    clisp_gtk2_SUMMARY="The GTK2 + dbus module for clisp"

    clisp_clx_DESCRIPTION="This is the new-clx clisp module for X.Org."
    clisp_gtk2_DESCRIPTION="This is the gtk2 clisp module for X.Org, with dbus included."

    clisp_clx_REQUIRES="clisp"
    clisp_gtk2_REQUIRES="clisp"

    clisp_CONTENTS="
--exclude=usr/lib/${PN}-${ORIG_PV}/dbus
--exclude=usr/lib/${PN}-${ORIG_PV}/clx
--exclude=usr/lib/${PN}-${ORIG_PV}/dynmod/*clx*
--exclude=usr/lib/${PN}-${ORIG_PV}/dynmod/*dbus*
--exclude=usr/lib/${PN}-${ORIG_PV}/dynmod/*gtk*
--exclude=usr/lib/${PN}-${ORIG_PV}/gtk2
usr
"

    clisp_clx_CONTENTS="
usr/lib/${PN}-${ORIG_PV}/clx
usr/lib/${PN}-${ORIG_PV}/dynmod/*clx*
"
    clisp_gtk2_CONTENTS="
usr/lib/${PN}-${ORIG_PV}/gtk2
usr/lib/${PN}-${ORIG_PV}/dbus
usr/lib/${PN}-${ORIG_PV}/dynmod/*dbus*
usr/lib/${PN}-${ORIG_PV}/dynmod/*gtk*
"
fi

MAKEOPTS+=" -j1"

DEPEND="
	libcrypt0
	libcrypt-devel
	libdb-devel
	libgdbm-devel
	libiconv-devel
	libncurses-devel
	libpcre-devel
	libsigsegv-devel
	mercurial
	libX11-devel
	libXext-devel
	libXpm-devel
"
MODULES="rawsock dirkey berkeley-db pcre gdbm clx/new-clx"
CHECK_MODULES="rawsock dirkey pcre gdbm clx/new-clx"
case "${ARCH}" in
    i686)
	DEPEND+="
		ffcall
		libfcgi-devel
		libgcrypt-devel
		libglade2.0-devel
		libpq-devel
		libpq5
		libsvm-devel
		postgresql-devel
		libdbus1-devel
"
	# The following modules require FFI and so canâ€™t currently be
	# built on x86_64.
	MODULES+=" bindings/win32 postgresql fastcgi zlib libsvm gtk2 dbus"
	# The test suite claims that win32 can't be found.  postgresql
	# test requires postgresql installed, and maybe service
	# runnng.  berkeley-db needs to be tested last; maybe there's
	# a timing issue with locks?  The testsuite for libsvm takes
	# hours to run, so we don't do it routinely.
	CHECK_MODULES+=" postgresql fastcgi zlib gtk2 dbus berkeley-db"
	WITHMODS="--with-modules=$(echo ${MODULES} | sed -e's, , --with-modules=,g')"
	CYGCONF_ARGS="${WITHMODS} --docdir=/usr/share/doc/${PN}"
	# Avoid alignment error when building.
	CFLAGS+=" -falign-functions=4"
	;;
    x86_64)
	CHECK_MODULES+=" berkeley-db"
	WITHMODS="--with-modules=$(echo ${MODULES} | sed -e's, , --with-modules=,g')"
	CYGCONF_ARGS="${WITHMODS} --docdir=/usr/share/doc/${PN} --without-ffcall"
	;;
esac
	
export CFLAGS
LDFLAGS="-Wl,--stack,0x800000"
export LDFLAGS

# do not strip for (disassemble)
RESTRICT="debuginfo strip"

src_compile() {
    cd ${S}
    verbose ./configure --prefix=/usr ${CYGCONF_ARGS} ${B} \
	     || error "configure failed"
    cd ${B}
    cygmake MODULES="${MODULES}"
}

src_install() {
    cd ${B}
    cyginstall MODULES="${MODULES}"
}

# clx and dbus tests have to be run under X.  Sometimes the clx test
# hangs or produces failures and has to be run manually: 'cd ${B};
# make full-mod-check MODULES=clx/new-clx'.

src_test() {
    cd ${B}
    # local DLLS=$(find . -name '*.dll')
    # rebase -O ${DLLS}
    # find . -name '*.dll' | rebase -OT -
    make -k check || true
    make -k base-mod-check || true
    make -k full-mod-check MODULES="${CHECK_MODULES}"
}

## Reini's comments:

# --with-libpari-prefix=/usr/local --with-module=pari fails at freeall() and init_opts
# --with-module=matlab requires the redistributable matlab dll's in your path. 
#   maybe this requires an extra clisp-matlab package. Fixed by --with-dynamic-modules
# --with-module=fastcgi is linked statically, so (FASTCGI:ACCEPT) works in 
#   clisp -K full without installed fcgi. Note: Tests with lighttpd dumped core.
# --with-module=gdi is Dan Stangers experimental gdi interface (native windows gui)
# --with-jitc=lightning in work. Too slow yet and still in its infancy.
# --with-threads works, but too slow
