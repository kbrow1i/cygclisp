NAME="clisp"
VERSION=2.49
RELEASE=1.20170312hg15808
HOMEPAGE="http://clisp.cons.org/"
ORIG_PV=2.49+

PKG_NAMES="${PN} ${PN}-clx"

HG_URI="http://hg.code.sf.net/p/clisp/clisp"
HG_REV=15808
inherit hg

# The following have been sent upstream but not applied yet.
PATCH_URI+=" http://sourceforge.net/p/clisp/patches/_discuss/thread/3427bc0d/b018/attachment/clisp-libsvm.patch"

# The following were rejected upstream
# PATCH_URI+=" http://sourceforge.net/p/clisp/patches/39/attachment/04-uuid.patch"
PATCH_URI+=" http://sourceforge.net/p/clisp/patches/40/attachment/06-gtk_server_cfg.patch"

# The following aren't ready for upstream.
# PATCH_URI+=" 11-update_modules_syscalls_configure.patch"
PATCH_URI+=" 20170303-update_modules_syscalls_configure.patch"
PATCH_URI+=" 2.49+-gtk2_lib_name.patch"
PATCH_URI+=" 2.49-no_cygwin_README.patch"
PATCH_URI+=" unix_line_endings_cygwin.patch"
PATCH_URI+=" cygwin-no-save-executable.patch"
PATCH_URI+=" 20170306-berkeley_db_test.patch"
# PATCH_URI+=" 20150312-clx_test.patch"
PATCH_URI+=" 20150312-excepsit_test.patch"
PATCH_URI+=" 20150312-gdbm_test.patch"
# PATCH_URI+=" 20150312-libsvm_test.patch"
PATCH_URI+=" 20150312-path_test.patch"
PATCH_URI+=" 20170306-rawsock_test.patch"
PATCH_URI+=" 20150312-postgresql_test.patch"
PATCH_URI+=" 20170306-socket_test.patch"
PATCH_URI+=" 20170306-syscalls_test.patch"
PATCH_URI+=" 20170306-no_noreturn_in_typedef.patch"
PATCH_URI+=" 20170306-declare_ioctl.patch"
PATCH_URI+=" 20170306-berkeley_db_txn_recover.patch"
PATCH_URI+=" 20170312-noclobber.patch"
PATCH_URI+=" 20170306-uninitialized.patch"
PATCH_URI+=" 20170312-no_shift_negative_value.patch"
PATCH_URI+=" 20170312-const_qualifier.patch"

clisp_CATEGORY="Devel Interpreters Math Shells"
clisp_SUMMARY="An ANSI Common Lisp implementation"
clisp_DESCRIPTION="ANSI Common Lisp is a high-level, general-purpose programming
language.  GNU CLISP is a Common Lisp implementation by Bruno Haible
of Karlsruhe University and Michael Stoll of Munich University, both
in Germany.  It mostly supports the Lisp described in the ANSI Common
Lisp standard.  GNU CLISP includes an interpreter, a compiler, a
debugger, CLOS, MOP, a foreign language interface, sockets, i18n, fast
bignums, and more.  An X11 interface is available through CLX, Garnet,
CLUE/CLIO.  GNU CLISP runs Maxima, ACL2, and many other Common Lisp
packages."

clisp_clx_CATEGORY="Interpreters"
clisp_clx_SUMMARY="The new-clx module for clisp"
clisp_clx_DESCRIPTION="This is the new-clx clisp module for X.Org."
clisp_clx_REQUIRES="clisp"

clisp_CONTENTS="
--exclude=usr/lib/${PN}-${ORIG_PV}/dbus
--exclude=usr/lib/${PN}-${ORIG_PV}/clx
--exclude=usr/lib/${PN}-${ORIG_PV}/dynmod/*clx*
--exclude=usr/lib/${PN}-${ORIG_PV}/dynmod/*dbus*
--exclude=usr/lib/${PN}-${ORIG_PV}/dynmod/*gtk*
--exclude=usr/lib/${PN}-${ORIG_PV}/gtk2
usr
"

clisp_clx_CONTENTS="
usr/lib/${PN}-${ORIG_PV}/clx
usr/lib/${PN}-${ORIG_PV}/dynmod/*clx*
"

if [ "${ARCH}" = i686 ]
then
    PKG_NAMES+=" ${PN}-gtk2"
    clisp_gtk2_CATEGORY="Interpreters"
    clisp_gtk2_SUMMARY="The GTK2 + dbus module for clisp"
    clisp_gtk2_DESCRIPTION="This is the gtk2 clisp module for X.Org, with dbus included."
    clisp_gtk2_REQUIRES="clisp"

    clisp_gtk2_CONTENTS="
usr/lib/${PN}-${ORIG_PV}/gtk2
usr/lib/${PN}-${ORIG_PV}/dbus
usr/lib/${PN}-${ORIG_PV}/dynmod/*dbus*
usr/lib/${PN}-${ORIG_PV}/dynmod/*gtk*
"
fi

MAKEOPTS+=" -j1"

DEPEND="
	libX11-devel
	libXext-devel
	libXpm-devel
	libcrypt-devel
	libcrypt0
	libdb-devel
	libgdbm-devel
	libiconv-devel
	libncurses-devel
	libpcre-devel
	libsigsegv-devel
	mercurial
"
# clx is currently broken: https://sourceforge.net/p/clisp/mailman/clisp-devel/thread/8b7ee413-fa96-d0ef-004c-4079be6939c9%40cornell.edu/#msg35700257
# MODULES="rawsock dirkey berkeley-db pcre gdbm clx/new-clx"
# CHECK_MODULES="rawsock dirkey pcre gdbm clx/new-clx"

MODULES="rawsock dirkey berkeley-db pcre gdbm"
CHECK_MODULES="rawsock dirkey pcre gdbm berkeley-db"
case "${ARCH}" in
    i686)
	DEPEND+="
		ffcall
		libdbus1-devel
		libfcgi-devel
		libgcrypt-devel
		libglade2.0-devel
		libpq-devel
		libpq5
		libsvm-devel
		postgresql-devel
"
	# The following modules require FFI and so canâ€™t currently be
	# built on x86_64.
	MODULES+=" bindings/win32 postgresql fastcgi zlib libsvm gtk2 dbus"

	# The test suite claims that win32 can't be found.  The
	# testsuite for libsvm takes hours to run, so we don't do it
	# routinely.  I'm temporarily not testing dbus so I can use
	# AppVeyor, where I don't think I can run tests under X.
	# CHECK_MODULES+=" postgresql fastcgi zlib gtk2 dbus"
	CHECK_MODULES+=" postgresql fastcgi zlib gtk2"
	WITHMODS="--with-modules=$(echo ${MODULES} | sed -e's, , --with-modules=,g')"
	CYGCONF_ARGS="${WITHMODS} --docdir=/usr/share/doc/${PN}"
	;;
    x86_64)
	WITHMODS="--with-modules=$(echo ${MODULES} | sed -e's, , --with-modules=,g')"
	CYGCONF_ARGS="${WITHMODS} --docdir=/usr/share/doc/${PN} --without-ffcall"
	;;
esac
	
export CFLAGS
LDFLAGS="-Wl,--stack,0x800000"
export LDFLAGS

# do not strip for (disassemble)
RESTRICT="debuginfo strip"

src_compile() {
    cd ${S}
    verbose ./configure --prefix=/usr ${CYGCONF_ARGS} ${B} \
	     || error "configure failed"
    cd ${B}
    cygmake -k MODULES="${MODULES}"
}

src_install() {
    cd ${B}
    cyginstall MODULES="${MODULES}"
}

# clx and dbus tests have to be run under X.  Sometimes the clx test
# hangs or produces failures and has to be run manually: 'cd ${B};
# make full-mod-check MODULES=clx/new-clx'.

src_test() {
    cd ${B}
    # find . -name '*.dll' | rebase -OT -
    make -k check || true
    make -k base-mod-check || true
    make -k full-mod-check MODULES="${CHECK_MODULES}" || true
}
